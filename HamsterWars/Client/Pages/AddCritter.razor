@using HamsterWars.Shared.Models
@using System.Net.Http.Headers
@inject HttpClient client
@using HamsterWars.Client.Pages
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting





<h2>
    @LastSubmitResult
</h2>

<EditForm method="post" Model=@hamster OnValidSubmit=@ValidFormSubmitted OnInvalidSubmit=@InvalidFormSubmitted class="my-3">
    <div class="my-3">
        <DataAnnotationsValidator />

        <input @bind-value="@hamster.Name" type="text" placeholder="Name" />
        <input @bind-value="@hamster.Age" type="number" placeholder="Age" />
        <input @bind-value="@hamster.FavFood" type="text" placeholder="FavFood" />
        <input @bind-value="@hamster.Loves" type="text" placeholder="Loves" />       
        <InputFile OnChange="@FileUpload">Upload</InputFile>
        
        
    </div>


    <button class="btn btn-primary" type="submit" value="Save">Submit</button>
</EditForm>
@code {
    Hamster hamster = new Hamster();


    string LastSubmitResult;
    public EventCallback UpdateAgain { get; set; }

    void FormSubmitted(EditContext editContext)
    {
        bool formIsValid = editContext.Validate();
        LastSubmitResult =
          formIsValid
          ? "Success - form was valid"
          : "Failure - form was invalid";
    }

    async Task ValidFormSubmitted(EditContext editContext)
    {

        await client.PostAsJsonAsync<Hamster>("HamsterGallery", hamster);
        LastSubmitResult = "Hamster har blivit tillagd";

        Gallery.Changed = true;

    }
    void InvalidFormSubmitted(EditContext editContext)
    {
        LastSubmitResult = "Fel Info";
    }

    async Task FileUpload(InputFileChangeEventArgs e)
    {
        
        var format = "image/png";
        var file = await e.File.RequestImageFileAsync("image/png", 1000, 1000);
        string s = System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), "images", "hamsters", e.File.Name.Trim());

        

    }

}




