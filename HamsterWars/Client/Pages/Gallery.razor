@page "/Gallery"
@using HamsterWars.Shared.Models;
@inject HttpClient client
@using Newtonsoft.Json

<button @onclick="CreateCritter" type="button" class="btn btn-primary">Create Critter</button>
@if (createCritter == true)
{
    <AddCritter></AddCritter>
}

<style>
    .hamsters:hover{
        cursor:pointer;
    }
</style>

<div class="container-fluid ">
    <div class="row col-12">
        @foreach (var animal in hamsters)
        {

            <div class="card col-2">
                <div class="card-header">
                    <h5>@animal.Name </h5>
                </div>
                <div @onclick="ShowDetails" class="card-img hamsters" style="height: 350px; width: 100%; float: left;">
                    @if (mouseOver == false)
                    {
                        <img style="position: relative; float: left; height: 100%; width: 100%;" src="/images/hamsters/@animal.ImgName.ToString()">
                    }
                    else
                    {
                        <div class="card-body">

                            <p>Age: @animal.Age</p>
                            <p>FavFood: @animal.FavFood</p>
                            <p>Loves: @animal.Loves</p>
                            <p>Wins: @animal.Wins</p>
                            <p>Losses: @animal.Losses</p>
                            <p>Games: @animal.Games</p>

                        </div>
                    
                    <div>
                        <button class="btn btn-danger" @onclick="@(e => DeleteCritter(animal.Id))">Delete</button>
                    </div>
                    }
                </div>


            </div>
        }
    </div>
</div>



@code {

    public static bool Changed = false;

    Dictionary<int, bool> showDetails = new Dictionary<int, bool>();

    List<Hamster>? hamsters = new List<Hamster>();
    Hamster hamster;
    bool mouseOver = false;
    bool createCritter = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            hamsters = await client.GetFromJsonAsync<List<Hamster>>("HamsterGallery/hamsters");
            Changed = false;
        }
        catch (Exception ex)
        {

        }

    }
    async Task DeleteCritter(int id)
    {

        hamster = hamsters.Where(x => x.Id == id).SingleOrDefault();
        hamsters.Remove(hamster);
        await client.DeleteAsync($"HamsterGallery/hamsters/{id}");

    }

    async Task CreateCritter()
    {
        if (createCritter == false)
            createCritter = true;
        else
            createCritter = false;
    }

    void ShowDetails()
    {
        if (mouseOver == false)
        {
            mouseOver = true;

        }

        else
            mouseOver = false;
    }

}
